// Generated by CoffeeScript 1.7.1
(function() {
  var execute;

  window.PATH = {
    BASEURL: '/themes/resource/js/'
  };

  require.config({
    baseUrl: window.PATH.BASEURL,
    shim: {
      bootstrap: {
        deps: ['backbone']
      }
    },
    paths: {
      bootstrap: 'bootstrap/js/bootstrap'
    }
  });

  require(['bootstrap'], function(bootstrap) {
    return execute(Backbone);
  });

  execute = function(Backbone) {
    var App, AppView, AppointmentDetailView, AppointmentList, AppointmentModel, AppointmentView, appoiList;
    AppointmentModel = Backbone.Model.extend({
      url: function() {
        var base;
        base = _.result(this, 'urlRoot') || _.result(this.collection, 'url');
        if (this.isNew()) {
          return base;
        }
        return base.replace(/([^\/])$/, '$1&') + encodeURIComponent('id=' + this.id);
      }
    });
    AppointmentDetailView = Backbone.View.extend({
      template: _.template($('#item_detail_tpl').html()),
      initialize: function() {
        this.listenTo(this.model, 'change', 'render');
        return this.render();
      },
      render: function() {
        $('#item_detail').html(this.template(this.model.toJSON()));
        return $('#item_detail_modal').modal();
      }
    });
    AppointmentView = Backbone.View.extend({
      tagName: 'li',
      className: 'list-group-item',
      template: _.template($('#appointment_item_tpl').html()),
      render: function() {
        this.$el.html(this.template(this.model.toJSON()));
        return this;
      },
      events: {
        'click a.a-tle,a.view': 'viewItem'
      },
      viewItem: function(e) {
        var self;
        self = this;
        return new AppointmentDetailView({
          model: self.model
        });
      }
    });
    AppointmentList = Backbone.Collection.extend({
      url: 'index.php?app=storeinterpose&act=appointment_list',
      model: AppointmentModel
    });
    appoiList = new AppointmentList;
    AppView = Backbone.View.extend({
      el: '.main',
      initialize: function() {
        this.listenTo(appoiList, 'add', this.addOne);
        return appoiList.fetch();
      },
      addOne: function(item) {
        var view;
        view = new AppointmentView({
          model: item
        });
        return this.$('#appointment_list').append(view.render().el);
      }
    });
    return App = new AppView;
  };

}).call(this);
